/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_game {
            bindings = <&tog 6>;
            key-positions = <38 39>;
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <39 40 41 30 18 6 7 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 40 41 8 36 37 38>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        tkl: tkl {
            compatible = "zmk,behavior-hold-tap";
            label = "TKL";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <39 40 41 30 18 6 7 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 40 41 8 38 37 36>;
            hold-trigger-on-release;
        };

        tkr: tkr {
            compatible = "zmk,behavior-hold-tap";
            label = "TKR";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q            &kp W            &kp E                &kp R              &kp T      &kp Y         &kp U               &kp I                 &kp O             &kp P                     &none
&none  &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LEFT_CONTROL D  &hml LEFT_SHIFT F  &kp G      &kp H         &hmr RIGHT_SHIFT J  &hmr RIGHT_CONTROL K  &hmr RIGHT_ALT L  &hmr RIGHT_GUI SEMICOLON  &kp SQT
&none  &kp Z            &kp X            &kp C                &kp V              &kp B      &kp N         &kp M               &kp COMMA             &kp DOT           &kp FSLH                  &none
                                         &tkl 1 ESCAPE        &tkl 2 SPACE       &kp TAB    &tkr 3 ENTER  &tkr 4 BACKSPACE    &tkr 5 DELETE
            >;
        };

        media {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &trans      &trans            &trans             &trans           &trans        &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &trans      &kp K_PREVIOUS    &kp K_VOLUME_DOWN  &kp K_VOLUME_UP  &kp K_NEXT    &trans
&trans  &trans    &trans    &trans     &trans     &trans    &bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4
                            &trans     &trans     &trans    &kp K_STOP  &kp K_PLAY_PAUSE  &kp K_MUTE
            >;
        };

        nav {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &kp K_REDO      &kp K_PASTE     &kp K_COPY     &kp K_CUT    &kp K_UNDO    &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT    &kp CAPSLOCK  &trans
&trans  &trans    &trans    &trans     &trans     &trans    &kp INSERT      &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP  &kp END       &trans
                            &trans     &trans     &trans    &trans          &trans          &trans
            >;
        };

        sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp COLON       &kp DOLLAR       &kp PERCENT           &kp CARET              &kp PLUS           &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp TILDE       &kp EXCLAMATION  &kp AT                &kp HASH               &kp PIPE           &trans  &trans     &trans     &trans    &trans    &trans
                                         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER          &trans  &trans     &trans
            >;
        };

        num {
            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT     &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL    &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH     &trans  &trans     &trans     &trans    &trans    &trans
                           &kp DOT  &kp N0  &kp MINUS    &trans  &trans     &trans
            >;
        };

        fun {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &kp PRINTSCREEN    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &kp SCROLLLOCK     &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK    &trans  &trans     &trans     &trans    &trans    &trans
                         &trans  &trans  &trans             &trans  &trans     &trans
            >;
        };

        game {
            bindings = <
&kp ESCAPE    &kp TAB           &kp Q  &kp W  &kp E      &kp R    &trans  &trans  &trans  &trans  &trans  &trans
&kp TILDE     &kp LEFT_SHIFT    &kp A  &kp S  &kp D      &kp F    &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_ALT  &kp LEFT_CONTROL  &kp Z  &kp X  &kp C      &kp V    &trans  &trans  &trans  &trans  &trans  &trans
                                       &mo 8  &kp SPACE  &mo 7    &trans  &trans  &trans
            >;
        };

        game_num {
            bindings = <
&trans  &trans  &kp N1  &kp N2  &kp N3  &kp T     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N4  &kp N5  &kp N6  &kp G     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N7  &kp N8  &kp N9  &kp B     &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        game_fun {
            bindings = <
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                         &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
